---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-react"
  labels:
     {{ - include "sample.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values}}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-react"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-react"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: "{{ .Release.Name }}-react"
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name:  "{{ .Release.Name }}-react"
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: BD_HOST
              value: " {{ .Release.Name }}-backend-service"
            - name: BD_PORT
              value: "8000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-django"
  labels:
     {{- include "sample.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-django"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-django"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: "{{ .Release.Name }}-django"
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name:  "{{ .Release.Name }}-django"
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: "{{ .Release.Name }}-configmap"
          volumeMounts:
            - name: "{{ .Values.backend.persistence.name}}"
              persistenceVolumeClaim:
                claimName: "{{ .Values.backend.persistence.claimName }}"
      volumes:
        - name: "{{ .Values.backend.persistence.name}}"
          persistentVolumeClaim:
            claimName: "{{ .Values.backend.persistence.claimName }}"
---
