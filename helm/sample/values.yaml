service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false

grafana:
  replicaCount: 2
  image:
    registry: docker.io
    repository: grafana/grafana
    tag: "12.1.0"
    pullPolicy: IfNotPresent
  service:
    enabled: false
    type: ClusterIP
    port: 3000
    targetPort: 3000
  datasources:
    enabled: true
    influxdb:
      url: "http://influxdb:8086"
      database: "telegraf"
      user: "admin"
      password: "influxdb-password"

influxdb:
  replicaCount: 1
  objectStorage: file
  image:
    registry: docker.io
    repository: bitnami/influxdb
    tag: "3.2.1-debian-12-r0"
    pullPolicy: IfNotPresent
  defaultInitContainers:
    volumePermissions:
      enabled: true
  persistence:
    enabled: true
    existingClaim: "influxdb-pvc"
    mountPath: /export/influxdb    
  nodeId: 0
  bucket: "scale-sample"
  database: "scale-sample"
  createAdminTokenJob:
    enabled: false
  auth:
    enabled: false
    adminUser: "admin"
  token:
  org: "Scale-Sample"
  # Resource limits  
  service:
    type: ClusterIP
    ports:
      http: 8086
      https: 8088
  serviceAccount:
    create: true
    name: ""

frontend:
  replicaCount: 1
  image:
    repository: library/frontend
    tag: ""
    pullPolicy: Never

backend:
  replicaCount: 1
  image:
    repository: library/backend
    tag: ""
    pullPolicy: Never
  persistence:
    name: backend-storage
    claimName: "csv-data-pvc"
    mountPath: /export/csv_data
